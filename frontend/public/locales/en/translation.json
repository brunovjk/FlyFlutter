{
  "about": {
    "title1": "Full Stack Web Developer",
    "title2": "Specializing in Blockchain Development",
    "body1": "Are you looking for a versatile web developer?",
    "body2": "With a deep understanding of blockchain technology and expertise in Solidity and Typescript.",
    "body3": "Explore my projects below to see my work with dApps and Smart Contracts."
  },
  "aboutPage": {
    "developer": {
      "title": "Web Developer Showcased",
      "text": [
        "Flyflutter is a Demonstration of Cutting-edge Web3 Technologies, Meticulously Crafted by brunovjk.",
        "It Serves as a Showcase for a Curated Collection of Powerful Technologies, Seamlessly Blending Simplicity With Innovation to Create an Immersive and Captivating Gambling Experience."
      ],
      "altImg": "Web Developer Showcase"
    },
    "technologies": {
      "title": "Main Technologies Used",
      "text": [
        "Next.js, Material Ui, Typescript, Solidity, Ethers.js, I18next, Nodemailer, Vanilla-tilt, Vercel, Wagmi and More.",
        "These Technologies form the Backbone of Flyflutter, Delivering a Robust and Sophisticated Platform That Pushes the Boundaries of What is Possible in the Realm of Web Development.",
        "To Explore Further, You Can Access the Complete Source Code on the Flyflutter Github Repository."
      ],
      "altImg": "Main Technologies Utilized"
    },
    "front": {
      "title": "Front-End Development",
      "text": [
        "Flyflutter's Front-end Development is made using Wagmi and Connect Kit, Meticulously Engineered to Provide Players With an Intuitive and Seamless Gambling Experience.",
        "Our User Interface Exhibits a Harmonious Blend of Simplicity and Elegance, Offering Effortless Navigation and Ease of Use.",
        "Powered by Smart Contracts on the Back-end, Flyflutter Ensures a Secure and Reliable Gambling Experience, Prioritizing Transparency and Fairness."
      ],
      "altImg": "Front-End Development Excellence"
    },
    "animation": {
      "title": "Animation and Transitions",
      "text": [
        "Within the Flyflutter Web App, Every Interaction is Brought to Life Through Captivating Animations and Fluid Transitions.",
        "Our Interface Seamlessly Responds to User Actions, Creating an Immersive and Dynamic Environment.",
        "From the Exhilarating Moments Triggered by Blockchain Events to the Smooth Transitions Throughout the App, These Meticulously Crafted Animations Elevate the Overall User Experience."
      ],
      "altImg": "Animation and Transitions"
    },
    "contracts": {
      "title": "Smart Contracts for Trust and Fairness",
      "text": [
        "FlyFlutter harnesses the power of smart contracts to underpin its gambling experience, ensuring utmost transparency and fairness.",
        "These contracts provide a secure environment for players, guaranteeing a level playing field for all participants.",
        "By integrating with the API3 QRNG service, FlyFlutter achieves decentralized random number generation, guaranteeing unbiased and tamper-proof results.",
        "Furthermore, the project leverages Gelato, a decentralized automation protocol, to streamline and automate various smart contract functionalities, enhancing the efficiency and reliability of the platform."
      ],
      "altImg": "Smart Contracts for Trust and Fairness"
    },
    "betting": {
      "title": "Betting Cycle",
      "text": [
        "The Betting Cycle in Flyflutter Involves the Following Steps:",
        "- Users Place Bets by Sending Matic and Flyflutter Coins to the Betting Contract.",
        "- OddAndEven Contract Generates a Random Number Using the API3 QuantumRNG Service.",
        "- Based on the User's Choice of Odd or Even and the Generated Number, the Contract Determines the Outcome of the Bet.",
        "- The Betting Contract Calculates the Payout and Transfers the Winnings to the User.",
        "This Cycle Ensures a Fair and Transparent Gambling Experience for All Participants."
      ],
      "altImg": "The Betting Cycle: A Seamless Gambling Experience"
    }
  },
  "appAlert": {
    "checkExplorer": "Check on Explorer"
  },
  "betAmountSelector": {
    "label": "Bet Amount",
    "helperText": "Choose a Bet Amount (1-99 FFC)"
  },
  "betButton": {
    "tooltip": "To place a bet, choose a Guess, a Hand, and a Bet Amount. Make sure you have enough FFC tokens.",
    "label": "Review and Place Bet"
  },
  "betFee": {
    "caption": "Bet Fee:",
    "tooltip": "This Matic Fee is used to cover the costs of the tools used to ensure the game is fair and secure, including the random number generator and automation services."
  },
  "confirmBet": {
    "selectedGuess": "Selected Guess: {{guess}}",
    "selectedHand": "Selected Hand: {{hand}}",
    "selectedBetAmount": "Selected Bet Amount: {{amount}} FFC",
    "betFee": "Bet Fee: {{fee}} MATIC"
  },
  "confirmDialog": {
    "title": "Confirm Bet",
    "confirmText": "Confirm",
    "cancelText": "Cancel"
  },
  "connect": "Play!",
  "contact": {
    "title": "Continuous Learning",
    "body1": "As a developer full stack, I embrace continuous learning to stay at the forefront of emerging technologies. While I have a deep understanding of blockchain development, I also excel in various other areas, enabling me to provide comprehensive solutions for my clients.",
    "body2": "Feel free to reach out to discuss your project needs and goals.",
    "body3": "You can contact me via email at",
    "email": "brunovjk@gmail.com",
    "body4": " or",
    "placeholder": "Enter your message",
    "sendButton": "Send",
    "illustrationAltText": "Continual Learning",
    "nameLabel": "Name",
    "emailLabel": "Email",
    "messageLabel": "Message",
    "alertPopup": "Alert Popup",
    "messageSent": "Message sent! I will get back to you as soon as possible.",
    "sendErrorMessage": "Failed to send the message, please try again."
  },
  "errorPage": {
    "title": "404 - Page Not Found",
    "message": "Sorry, the page you are looking for does not exist.",
    "homeButton": "Go back to Home"
  },
  "even": "Even",
  "ffcapprove": {
    "allowanceLabel": "Allowance",
    "approveButton": "Approve",
    "approveTooltip": "Approve Betting Contract: To place a bet, you need to approve the Betting contract to spend a specific amount of FFC on your behalf.",
    "approveSuccess": "Approved successfully",
    "approveFailure": "Failed to Approve"
  },
  "ffcmint": {
    "balanceLabel": "Balance",
    "mintButton": "Mint",
    "mintTooltip": "FlyFlutterCoin Minting Rules: You can mint up to 100 FlyFlutterCoins at a time if your wallet balance is less than 10 FFC.",
    "mintSuccess": "Successfully Minted 100 FFC to:",
    "mintFailure": "Failed to Mint FFC,"
  },
  "header": {
    "linkAbout": "About",
    "linkProjects": "Projects",
    "linkContact": "Contact"
  },
  "hero": {
    "title": "Experience the thrill of gambling without risking a dime.",
    "description": "FlyFlutter - Play Odd and Even Hand Game with Quantum Randomness and Smart Contracts Automation for Zero Gravity Decisions! It operates on the Polygon and Mumbai blockchains using our free to mintÂ ",
    "tokenName": "FlyFlutterCoin"
  },
  "history": {
    "columns": {
      "guess": {
        "headerName": "Guess",
        "description": "Odd or Even"
      },
      "playerHand": {
        "headerName": "Player's Hand",
        "description": "Selected hand by the player"
      },
      "houseHand": {
        "headerName": "House's Hand",
        "description": "Generated hand by the house"
      },
      "betAmount": {
        "headerName": "Bet Amount",
        "description": "Amount betted"
      },
      "winner": {
        "headerName": "Winner",
        "description": "And the winner is..."
      }
    }
  },
  "houseDisplay": {
    "houseLabel": "House",
    "houseTooltip": "Total amount of FlyFlutterCoin held by the House",
    "totalBetLabel": "Total Bets",
    "totalBetTooltip": "Total amount of FlyFlutterCoin bet by the House with players",
    "totalSentLabel": "Total Sent",
    "totalSentTooltip": "Total amount of FlyFlutterCoin sent by the House to bet winners"
  },
  "odd": "Odd",
  "playFunctions": {
    "handleSetWinner": {
      "playerWins": "Player Wins!",
      "houseWins": "House Wins!",
      "checkHistoryError": "Oops... Error checking history",
      "fetchWinnerError": "Error fetching the winner. Please check the explorer:"
    },
    "handleSetHousehand": {
      "fetchWinnerError": "Error fetching the winner. Please check the explorer:"
    },
    "handleBetTx": {
      "betPlacedSuccess": "Bet placed successfully! You can close this page anytime.",
      "betTransactionFailed": "Transaction failed. Please try again."
    },
    "handlePlaceBet": {
      "transactionSent": "Transaction sent. Please wait for confirmation.",
      "transactionNotSent": "Transaction not sent. Please try again."
    }
  },

  "results": {
    "playerLabel": "Player",
    "playerTooltip": "Your last bet",
    "waitingBetLabel": "Waiting for Bet...",
    "lastBetLabel": "Last Bet",
    "waitingBetTooltip": "Waiting for QRNG and Gelato. You can close this page anytime. Check all your bets in the History tab.",
    "lastBetTooltip": "Winner of the last bet",
    "houseLabel": "House",
    "houseTooltip": "House Hand"
  },

  "tabs": {
    "playLabel": "Play",
    "rulesLabel": "Rules",
    "historyLabel": "History"
  },
  "talkingAstronauts": {
    "svgAlt": "Talking Astronauts",
    "bubble1": "Who's gonna do the dishes tonight?",
    "bubble2_1": "Let",
    "bubble2_2": "decide!",
    "tokenName": "FlyFlutter"
  },

  "rules": [
    {
      "title": "Welcome to FlyFlutter!",
      "copy": "FlyFlutter is a game designed to showcase my skills as a developer and provide an entertaining gambling experience. Operating on the Polygon blockchain, using the FlyFlutterCoin token, it combines the excitement of gambling with my passion for Games and Space."
    },
    {
      "title": "FlyFlutterCoin",
      "copy": "FlyFlutterCoins are the native tokens of the game and serve as the currency for placing bets and earning payouts. Please note that they have no real-world value and cannot be exchanged for any other currency or asset. Each wallet can mint up to 100 FlyFlutter coins at a time, as long as the wallet balance is below 10 FlyFlutter coins."
    },
    {
      "title": "Placing a Bet",
      "copy": "To place a bet, you must pay a bet cost of 0.01 MATIC and choose a value of FlyFlutterCoin between 1 and 99. The 0.01 MATIC fee covers the expenses associated with maintaining a fair and secure gaming environment, including the utilization of random number generators (QRNG) and automation services (Gelato)."
    },
    {
      "title": "The House",
      "copy": "The house's role in FlyFlutter is solely to hold FlyFlutterCoins. It does not profit from the game. At the beginning of the game, the house is endowed with 10,000 FFC. Additionally, users have the option to donate (transfer) FlyFlutterCoin to the House."
    },
    {
      "title": "Accessibility",
      "copy": "FlyFlutter is accessible to players worldwide, requiring only an internet connection and some MATICs to participate. Whether you're located in the heart of a bustling city or in a remote corner of the world, you can join in on the FlyFlutter experience."
    },

    {
      "title": "Disclaimer",
      "copy": "While FlyFlutter is an exhilarating game, it is important to remember that it involves an element of chance. There is always a risk of losing when placing bets. We strongly advise all players to gamble responsibly and only wager amounts they can afford to lose."
    },
    {
      "title": "Changes to the Rules",
      "copy": "FlyFlutter is a dynamic game that will evolve over time. User feedback, contributions from developers, and any emerging issues will shape its ongoing development. We are committed to maintaining transparency and fairness throughout any updates or modifications to the game's rules. We highly encourage players to provide feedback and suggestions to help enhance the overall gaming experience."
    },
    {
      "title": "Conclusion",
      "copy": "Thank you for joining us on this exciting journey with FlyFlutter. We hope you enjoy playing and wish you the best of luck as you explore the thrilling world of FlyFlutter!"
    }
  ],

  "projects": [
    {
      "projectName": "Reward System",
      "description": "Automated reward system for BRAIN+ using Chainlink.",
      "technologiesUsed": "Data Feed, Automation, Chainlink",
      "keyFeatures": "Autopilot Rewards, Performance Tracking",
      "learnMore": "Explore More",
      "learnMoreLink": "https://blog.biggerminds.io/biggerminds-integrates-chainlink-automation-to-help-update-and-distribute-dynamic-rewards-27a7c016623c"
    },
    {
      "projectName": "Gridding",
      "description": "DeFi portfolio dashboard with dynamic NFT mutation.",
      "technologiesUsed": "DeFi, Chainlink, Tableland, IPFS",
      "keyFeatures": "Accessibility, Interactivity, Dynamic NFT Mutation",
      "learnMore": "Get Started",
      "learnMoreLink": "https://gridding.xyz/"
    },
    {
      "projectName": "Willr.io",
      "description": "Create and secured wills on the blockchain.",
      "technologiesUsed": "ICON, Ethereum, Cross-Chain",
      "keyFeatures": "Secure asset transfer, Cross-chain functionality",
      "learnMore": "Discover Now",
      "learnMoreLink": "https://github.com/nour-karoui/Willr.io"
    },
    {
      "projectName": "MIND Liquidity Tool",
      "description": "Manage liquidity for MIND/AVAX token pair.",
      "technologiesUsed": "Automated Market Making (AMM), Liquidity Pool Management",
      "keyFeatures": "Add/Remove Liquidity, Set Parameters",
      "learnMore": "Dive In",
      "learnMoreLink": "https://github.com/brunovjk/MINDSLiquidityTool/"
    },
    {
      "projectName": "SoulWars",
      "description": "Unity Browser-based game with NFT integration to control access.",
      "technologiesUsed": "ERC-1155, Java, Solidity",
      "keyFeatures": "Access Control, Thirdweb SDK Unity, Conditional 3D rendering",
      "learnMore": "Play Now",
      "learnMoreLink": "https://soulwars.web.app/"
    },
    {
      "projectName": "Frontend Portfolio",
      "description": "Showcasing frontend skills, page transition, animations and server-side rendering.",
      "technologiesUsed": "Next.js, Three.js, Tailwind CSS",
      "keyFeatures": "Portfolio Website",
      "learnMore": "See Showcase",
      "learnMoreLink": "https://vjkportifolio.web.app/"
    },
    {
      "projectName": "Campaign Creator",
      "description": "Crowdfunding contract for managing campaigns.",
      "technologiesUsed": "ERC20, Solidity, Hardhat",
      "keyFeatures": "Max duration, ERC20 funding, Refund on goal failure",
      "learnMore": "Start Crowdfunding",
      "learnMoreLink": "https://github.com/brunovjk/crowdfunding"
    },
    {
      "projectName": "ERC-20 Playground",
      "description": "Interface for interacting with ERC-20 tokens and Uniswap.",
      "technologiesUsed": "Ethereum, ERC20, Uniswap, Material Ui",
      "keyFeatures": "Token interaction, Uniswap swapping, Transaction history",
      "learnMore": "Swap Tokens",
      "learnMoreLink": "https://vjkswapp.web.app/"
    },
    {
      "projectName": "NFT Generator",
      "description": "Automated smart contracts for NFT generation using Chainlink.",
      "technologiesUsed": "Chainlink, Solidity, Ether.js",
      "keyFeatures": "Contract automation, NFT collection, SVG creation",
      "learnMore": "Create NFTs",
      "learnMoreLink": "https://vjknft.web.app/"
    },
    {
      "projectName": "SaudeVapor",
      "description": "Platform about cannabis and medical research.",
      "technologiesUsed": "Google Cloud, Solana, Metaplex, DAO",
      "keyFeatures": "Cannabis Compound NFT collection, DAO creation",
      "learnMore": "Learn More",
      "learnMoreLink": "https://www.saudevapor.com/"
    }
  ]
}
