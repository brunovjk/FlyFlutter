/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BettingContract,
  BettingContractInterface,
} from "../../../../contracts/helpers/Betting_requestQRNG.sol/BettingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_airnodeRrp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_flyFlutterCoinContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_houseContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oddsAndEvenContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectFeeAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBetAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPlayerGuess",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPlayerHand",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFundsToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "ReceiveBetFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newBetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "playerHand",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "playerGuess",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "betAmount",
        type: "uint8",
      },
    ],
    name: "BetPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "houseHand",
        type: "uint8",
      },
    ],
    name: "ReceivedUint256",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "RequestedUint256",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
    ],
    name: "TaskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
    ],
    name: "TaskExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "BET_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GUESS_EVEN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GUESS_ODD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FFC_BET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_HAND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_FFC_BET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_HAND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airnode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airnodeRrp",
    outputs: [
      {
        internalType: "contract IAirnodeRrpV0",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bets",
    outputs: [
      {
        internalType: "uint256",
        name: "betId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "playerHand",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "playerGuess",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "betAmount",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "houseHand",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "winner",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endpointIdUint256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executeTask",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flyFlutterCoinContract",
    outputs: [
      {
        internalType: "contract FlyFlutterCoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "fulfillUint256",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "houseContract",
    outputs: [
      {
        internalType: "contract HouseContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oddsAndEvenContract",
    outputs: [
      {
        internalType: "contract OddsAndEven",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "playerHand",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "playerGuess",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "betAmount",
        type: "uint8",
      },
    ],
    name: "placeBet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "betId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "playerHand",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "playerGuess",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "betAmount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "houseHand",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "requestId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "taskId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "winner",
            type: "string",
          },
        ],
        internalType: "struct BettingContract.Bet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flyFlutterCoinContract",
        type: "address",
      },
    ],
    name: "setFlyFlutterCoinContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_houseContract",
        type: "address",
      },
    ],
    name: "setHouseContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oddsAndEvenContract",
        type: "address",
      },
    ],
    name: "setOddsAndEvenContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_airnode",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_endpointIdUint256",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_sponsorWallet",
        type: "address",
      },
    ],
    name: "setRequestParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sponsorWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "waitingCloseBet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "waitingFulfillment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type BettingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BettingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BettingContract__factory extends ContractFactory {
  constructor(...args: BettingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _airnodeRrp: PromiseOrValue<string>,
    _flyFlutterCoinContract: PromiseOrValue<string>,
    _houseContract: PromiseOrValue<string>,
    _oddsAndEvenContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BettingContract> {
    return super.deploy(
      _airnodeRrp,
      _flyFlutterCoinContract,
      _houseContract,
      _oddsAndEvenContract,
      overrides || {}
    ) as Promise<BettingContract>;
  }
  override getDeployTransaction(
    _airnodeRrp: PromiseOrValue<string>,
    _flyFlutterCoinContract: PromiseOrValue<string>,
    _houseContract: PromiseOrValue<string>,
    _oddsAndEvenContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _airnodeRrp,
      _flyFlutterCoinContract,
      _houseContract,
      _oddsAndEvenContract,
      overrides || {}
    );
  }
  override attach(address: string): BettingContract {
    return super.attach(address) as BettingContract;
  }
  override connect(signer: Signer): BettingContract__factory {
    return super.connect(signer) as BettingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BettingContractInterface {
    return new utils.Interface(_abi) as BettingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BettingContract {
    return new Contract(address, _abi, signerOrProvider) as BettingContract;
  }
}
