/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OddAndEven,
  OddAndEvenInterface,
} from "../../contracts/OddAndEven";

const _abi = [
  {
    inputs: [],
    name: "InvalidGuesses",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidHand",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "playerHand",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "playerGuess",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "houseHand",
        type: "uint8",
      },
    ],
    name: "winner",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61047b610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806304b47eb51461003a575b600080fd5b610054600480360381019061004f919061027c565b61006a565b604051610061919061035f565b60405180910390f35b606060008460ff161080610081575060058460ff16115b8061008f575060008260ff16105b8061009d575060058260ff16115b156100d4576040517f66bd2d5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360ff16141580156100ec575060018360ff1614155b15610123576040517f215f37ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828561013191906103b0565b905060006002826101429190610414565b60ff16148015610155575060008460ff16145b15610198576040518060400160405280600b81526020017f506c617965722077696e73000000000000000000000000000000000000000000815250915050610237565b60016002826101a79190610414565b60ff161480156101ba575060018460ff16145b156101fd576040518060400160405280600b81526020017f506c617965722077696e73000000000000000000000000000000000000000000815250915050610237565b6040518060400160405280600a81526020017f486f7573652077696e73000000000000000000000000000000000000000000008152509150505b9392505050565b600080fd5b600060ff82169050919050565b61025981610243565b811461026457600080fd5b50565b60008135905061027681610250565b92915050565b6000806000606084860312156102955761029461023e565b5b60006102a386828701610267565b93505060206102b486828701610267565b92505060406102c586828701610267565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156103095780820151818401526020810190506102ee565b60008484015250505050565b6000601f19601f8301169050919050565b6000610331826102cf565b61033b81856102da565b935061034b8185602086016102eb565b61035481610315565b840191505092915050565b600060208201905081810360008301526103798184610326565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103bb82610243565b91506103c683610243565b9250828201905060ff8111156103df576103de610381565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061041f82610243565b915061042a83610243565b92508261043a576104396103e5565b5b82820690509291505056fea26469706673582212200e6dc33bc700e4ffbeb6416d066d27dd3ad0c9803e5a3f4d56299008019d251a64736f6c63430008130033";

type OddAndEvenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OddAndEvenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OddAndEven__factory extends ContractFactory {
  constructor(...args: OddAndEvenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OddAndEven> {
    return super.deploy(overrides || {}) as Promise<OddAndEven>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OddAndEven {
    return super.attach(address) as OddAndEven;
  }
  override connect(signer: Signer): OddAndEven__factory {
    return super.connect(signer) as OddAndEven__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OddAndEvenInterface {
    return new utils.Interface(_abi) as OddAndEvenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OddAndEven {
    return new Contract(address, _abi, signerOrProvider) as OddAndEven;
  }
}
