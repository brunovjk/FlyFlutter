/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Betting,
  BettingInterface,
} from "../../../contracts/Betting.sol/Betting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_betFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_qrngFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_airnodeRrp",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_automate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_flyFlutterCoinContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fundsOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_houseContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oddsAndEvenContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedFundSponsorWallet",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectFeeAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBetAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPlayerGuess",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPlayerHand",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFundsToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "ReceiveBetFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIdNotKnown",
    type: "error",
  },
  {
    inputs: [],
    name: "SendBetFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SetWinnerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "playerHand",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "playerGuess",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "betAmount",
        type: "uint8",
      },
    ],
    name: "BetPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "houseHand",
        type: "uint8",
      },
    ],
    name: "ReceivedUint256",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "RequestedUint256",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "TaskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "winner",
        type: "string",
      },
    ],
    name: "TaskExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "GUESS_EVEN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GUESS_ODD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FFC_BET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_HAND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_FFC_BET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_HAND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airnode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airnodeRrp",
    outputs: [
      {
        internalType: "contract IAirnodeRrpV0",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "automate",
    outputs: [
      {
        internalType: "contract IAutomate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "betFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "betIDsPerPlayer",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "bets",
    outputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "playerHand",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "playerGuess",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "betAmount",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "houseHand",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "waitingFulfillment",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "waitingCloseBet",
        type: "bool",
      },
      {
        internalType: "string",
        name: "winner",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dedicatedMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endpointIdUint256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "flyFlutterCoinContract",
    outputs: [
      {
        internalType: "contract FlyFlutterCoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "fulfillUint256",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundsOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "houseContract",
    outputs: [
      {
        internalType: "contract HouseContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oddsAndEvenContract",
    outputs: [
      {
        internalType: "contract OddsAndEven",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "perfomTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "playerHand",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "playerGuess",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "betAmount",
        type: "uint8",
      },
    ],
    name: "placeBet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "playerHand",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "playerGuess",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "betAmount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "houseHand",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "requestId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "taskId",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "waitingFulfillment",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "waitingCloseBet",
            type: "bool",
          },
          {
            internalType: "string",
            name: "winner",
            type: "string",
          },
        ],
        internalType: "struct Betting.Bet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "qrngFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_betFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_qrngFee",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flyFlutterCoinContract",
        type: "address",
      },
    ],
    name: "setFlyFlutterCoinContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_houseContract",
        type: "address",
      },
    ],
    name: "setHouseContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oddsAndEvenContract",
        type: "address",
      },
    ],
    name: "setOddsAndEvenContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_airnode",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_endpointIdUint256",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_sponsorWallet",
        type: "address",
      },
    ],
    name: "setRequestParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sponsorWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taskTreasury",
    outputs: [
      {
        internalType: "contract ITaskTreasuryUpgradable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162002bba38038062002bba8339810160408190526200003591620003f7565b848381308962000045336200038e565b6001600160a01b0381166080819052604051632b77c09f60e21b81523060048201526001602482015263addf027c90604401600060405180830381600087803b1580156200009257600080fd5b505af1158015620000a7573d6000803e3d6000fd5b5050505050816001600160a01b031660a0816001600160a01b031681525050816001600160a01b031663573ea5756040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012b9190620004a0565b6001600160a01b0390811660e0526040516337b6269f60e21b8152908216600482015273c815db16d4be6ddf2685c201937905abf338f5d79063ded89a7c906024016040805180830381865afa1580156200018a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b09190620004c7565b506001600160a01b0390811660c0528381166101005260a0516040805163e60a321360e01b8152905191909216935063e60a3213925060048083019260209291908290030181865afa1580156200020b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002319190620004a0565b6001600160a01b039081166101205288925082169050620002655760405163867915ab60e01b815260040160405180910390fd5b856001600160a01b0381166200028e5760405163867915ab60e01b815260040160405180910390fd5b856001600160a01b038116620002b75760405163867915ab60e01b815260040160405180910390fd5b856001600160a01b038116620002e05760405163867915ab60e01b815260040160405180910390fd5b856001600160a01b038116620003095760405163867915ab60e01b815260040160405180910390fd5b856001600160a01b038116620003325760405163867915ab60e01b815260040160405180910390fd5b50505060019a909a555050600296909655600880546001600160a01b039485166001600160a01b0319918216179091556009805492851692821692909217909155600a8054969093169516949094179055506200050a92505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620003f457600080fd5b50565b600080600080600080600080610100898b0312156200041557600080fd5b885197506020890151965060408901516200043081620003de565b60608a01519096506200044381620003de565b60808a01519095506200045681620003de565b60a08a01519094506200046981620003de565b60c08a01519093506200047c81620003de565b60e08a01519092506200048f81620003de565b809150509295985092959890939650565b600060208284031215620004b357600080fd5b8151620004c081620003de565b9392505050565b60008060408385031215620004db57600080fd5b8251620004e881620003de565b60208401519092508015158114620004ff57600080fd5b809150509250929050565b60805160a05160c05160e051610100516101205161262f6200058b600039600061066b0152600061042301526000818161162a01526116ef015260008181610311015261095c01526000818161021b0152818161157901528181611ad10152611bd00152600081816104cd015281816107e7015261177a015261262f6000f3fe6080604052600436106101fd5760003560e01c806371bab6661161010d578063b3f81a57116100a0578063cdcf4aad1161006f578063cdcf4aad14610623578063db0fdb8814610639578063e60a321314610659578063f2fde38b1461068d578063fb807629146102d557600080fd5b8063b3f81a5714610598578063b51412d4146105ad578063bf90fb4e146105cd578063c902c3ae146105ed57600080fd5b8063841e6ce9116100dc578063841e6ce9146105445780638da5cb5b1461055a578063a36ff4d814610578578063b3bd367c1461059857600080fd5b806371bab666146104bb5780637592d19c146104ef57806375a56c7a1461050f5780637bdf25251461052457600080fd5b80633268df6f1161019057806346ee3c591161015f57806346ee3c5914610411578063499ff5d1146104455780635c22aa69146104655780635c82207714610485578063715018a6146104a657600080fd5b80633268df6f146103335780633718d90a1461035357806338014045146103735780633f555c721461039357600080fd5b80631896dc0f116101cc5780631896dc0f146102c0578063224e2fdd146102d557806324600fc3146102ea57806328f150eb146102ff57600080fd5b8063049aacfe1461020957806307b9fc571461025a5780630b78f9c01461027e5780630fdc0744146102a057600080fd5b3661020457005b600080fd5b34801561021557600080fd5b5061023d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561026657600080fd5b5061027060045481565b604051908152602001610251565b34801561028a57600080fd5b5061029e610299366004611e4e565b6106ad565b005b3480156102ac57600080fd5b5061029e6102bb366004611e85565b6106c0565b3480156102cc57600080fd5b50610270606381565b3480156102e157600080fd5b50610270600081565b3480156102f657600080fd5b5061029e610713565b34801561030b57600080fd5b5061023d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561033f57600080fd5b5061027061034e366004611ea2565b6107ab565b34801561035f57600080fd5b5061029e61036e366004611ece565b6107dc565b34801561037f57600080fd5b5061029e61038e366004611e85565b6108fe565b34801561039f57600080fd5b506104036103ae366004611f4a565b60008181526006602090815260409182902060030154825160248082019590955283518082039095018552604401909252820180516001600160e01b031663499ff5d160e01b17905260ff6101009091041691565b604051610251929190611fb3565b34801561041d57600080fd5b5061023d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561045157600080fd5b5061029e610460366004611f4a565b610951565b34801561047157600080fd5b5060095461023d906001600160a01b031681565b610498610493366004611fe4565b610a77565b604051610251929190612027565b3480156104b257600080fd5b5061029e610f55565b3480156104c757600080fd5b5061023d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104fb57600080fd5b50600a5461023d906001600160a01b031681565b34801561051b57600080fd5b50610270600581565b34801561053057600080fd5b5061029e61053f3660046120f7565b610f69565b34801561055057600080fd5b5061027060015481565b34801561056657600080fd5b506000546001600160a01b031661023d565b34801561058457600080fd5b5060035461023d906001600160a01b031681565b3480156105a457600080fd5b50610270600181565b3480156105b957600080fd5b5060085461023d906001600160a01b031681565b3480156105d957600080fd5b5060055461023d906001600160a01b031681565b3480156105f957600080fd5b5061060d610608366004611f4a565b610ff7565b6040516102519a99989796959493929190612139565b34801561062f57600080fd5b5061027060025481565b34801561064557600080fd5b5061029e610654366004611e85565b6110f3565b34801561066557600080fd5b5061023d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561069957600080fd5b5061029e6106a8366004611e85565b611146565b6106b56111bf565b600191909155600255565b806001600160a01b0381166106e85760405163867915ab60e01b815260040160405180910390fd5b6106f06111bf565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b61071b6111bf565b47600081900361073e576040516367e3990d60e01b815260040160405180910390fd5b604051600090339083908381818185875af1925050503d8060008114610780576040519150601f19603f3d011682016040523d82523d6000602084013e610785565b606091505b50509050806107a7576040516327fcd9d160e01b815260040160405180910390fd5b5050565b600760205281600052604060002081815481106107c757600080fd5b90600052602060002001600091509150505481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108525760405162461bcd60e51b8152602060048201526016602482015275043616c6c6572206e6f74204169726e6f6465205252560541b60448201526064015b60405180910390fd5b60008381526006602052604090206003015460ff166108845760405163bc2206b960e01b815260040160405180910390fd5b60006108908383611219565b600085815260066020526040808220805460ff8516600160b81b810260ff60b81b199092169190911782556003909101805461ffff191661010017905590519293509186917f13c7aadfce2d7e5981fe9fb6f061fd6792c9b61b5100be84405f427af826348391a350505050565b806001600160a01b0381166109265760405163867915ab60e01b815260040160405180910390fd5b61092e6111bf565b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109c95760405162461bcd60e51b815260206004820152601960248201527f4f6e6c7920646564696361746564206d73672e73656e646572000000000000006044820152606401610849565b600081815260066020526040902060030154610100900460ff1615610a59576000806109f48361123a565b9150915081610a16576040516367afe8ef60e01b815260040160405180910390fd5b80604051610a2491906121ae565b6040519081900381209084907f14b9dea92e96e8e43714c3fa68127994a5663bd62e2629e1576be3da1ba6547e90600090a350505b600080610a64611574565b91509150610a728282611601565b505050565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201526001543414610ae857604051631fbbed9560e01b815260040160405180910390fd5b60058560ff161115610b0d5760405163490832f160e11b815260040160405180910390fd5b60018460ff1614158015610b23575060ff841615155b15610b4157604051636089badf60e01b815260040160405180910390fd5b60018360ff161080610b56575060638360ff16115b15610b7457604051639de3d44160e01b815260040160405180910390fd5b6005546002546040516000926001600160a01b031691908381818185875af1925050503d8060008114610bc3576040519150601f19603f3d011682016040523d82523d6000602084013e610bc8565b606091505b5050905080610bea5760405163080fba3760e31b815260040160405180910390fd5b6000610bf4611714565b90506000610c0182611819565b90506000604051806101400160405280336001600160a01b031681526020018a60ff1681526020018960ff1681526020018860ff168152602001606360ff168152602001848152602001838152602001600115158152602001600015158152602001604051806020016040528060008152508152509050806006600085815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548160ff021916908360ff16021790555060608201518160000160166101000a81548160ff021916908360ff16021790555060808201518160000160176101000a81548160ff021916908360ff16021790555060a0820151816001015560c0820151816002015560e08201518160030160006101000a81548160ff0219169083151502179055506101008201518160030160016101000a81548160ff021916908315150217905550610120820151816004019081610da89190612268565b50503360008181526007602090815260408083208054600181018255908452919092200186905560085460095491516323b872dd60e01b815260048101939093526001600160a01b03918216602484015260ff8b1660448401521691506323b872dd906064016020604051808303816000875af1158015610e2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e519190612328565b610e6e576040516312171d8360e31b815260040160405180910390fd5b60095460405163611296d560e11b815260ff891660048201526001600160a01b039091169063c2252daa906024016020604051808303816000875af1158015610ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edf9190612328565b610efc5760405163e6a231e960e01b815260040160405180910390fd5b6040805160ff8b811682528a811660208301528916818301529051339185917f8e8f597283d6b081eab265de844ff841bd65c761222c746755ec1c47941363449181900360600190a36001999098509650505050505050565b610f5d6111bf565b610f676000611a6b565b565b826001600160a01b038116610f915760405163867915ab60e01b815260040160405180910390fd5b816001600160a01b038116610fb95760405163867915ab60e01b815260040160405180910390fd5b610fc16111bf565b5050600380546001600160a01b039485166001600160a01b03199182161790915560049290925560058054919093169116179055565b600660205260009081526040902080546001820154600283015460038401546004850180546001600160a01b0386169660ff600160a01b8804811697600160a81b8104821697600160b01b8204831697600160b81b909204831696909591948184169461010090920490931692909190611070906121e0565b80601f016020809104026020016040519081016040528092919081815260200182805461109c906121e0565b80156110e95780601f106110be576101008083540402835291602001916110e9565b820191906000526020600020905b8154815290600101906020018083116110cc57829003601f168201915b505050505090508a565b806001600160a01b03811661111b5760405163867915ab60e01b815260040160405180910390fd5b6111236111bf565b50600a80546001600160a01b0319166001600160a01b0392909216919091179055565b61114e6111bf565b6001600160a01b0381166111b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610849565b6111bc81611a6b565b50565b6000546001600160a01b03163314610f675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610849565b6000600561122983850185611f4a565b611233919061234a565b9392505050565b600a546000828152600660205260408082205490516304b47eb560e01b815260ff600160a01b830481166004830152600160a81b830481166024830152600160b81b909204909116604482015290916060916001600160a01b03909116906304b47eb590606401600060405180830381865afa1580156112be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112e6919081019061236c565b90506040518060400160405280600b81526020016a506c617965722077696e7360a81b81525060405160200161131c91906121ae565b604051602081830303815290604052805190602001208160405160200161134391906121ae565b60405160208183030381529060405280519060200120036115265760008381526006602052604090206004016113798282612268565b506008546009546000858152600660205260409020546001600160a01b03928316926323b872dd92811691908116906113bd90600160b01b900460ff16600261240e565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260ff1660448201526064016020604051808303816000875af1158015611414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114389190612328565b611455576040516312171d8360e31b815260040160405180910390fd5b6009546000848152600660205260409020546001600160a01b0391821691632209e991919081169061149290600160b01b900460ff16600261240e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260ff1660248201526044016020604051808303816000875af11580156114e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115049190612328565b6115215760405163334c4a9960e01b815260040160405180910390fd5b611543565b60008381526006602052604090206004016115418282612268565b505b600083815260066020526040902060038101805461ff0019169055600201546001925061156f90611abb565b915091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b810c6366040518163ffffffff1660e01b81526004016040805180830381865afa1580156115d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f8919061243f565b90939092509050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038216016116e95760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168360405160006040518083038185875af1925050503d8060008114611693576040519150601f19603f3d011682016040523d82523d6000602084013e611698565b606091505b5050905080610a725760405162461bcd60e51b815260206004820152601e60248201527f5f7472616e736665723a20455448207472616e73666572206661696c656400006044820152606401610849565b6107a7817f000000000000000000000000000000000000000000000000000000000000000084611b38565b60035460048054600554604051636e6be03f60e01b81526001600160a01b03948516938101939093526024830191909152306044830181905290831660648301526084820152631b8c6c8560e11b60a482015260e060c4820152600060e48201819052917f00000000000000000000000000000000000000000000000000000000000000001690636e6be03f90610104016020604051808303816000875af11580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e8919061246f565b60405190915081907fcba2da2f3c0c732a104019a3104936397dde7343964c1518ceb760052e4537b190600090a290565b6000806040518060400160405280600267ffffffffffffffff811115611841576118416121ca565b60405190808252806020026020018201604052801561186a578160200160208202803683370190505b5081526040805160028082526060820190925260209092019190816020015b606081526020019060019003908161188957505090528051805191925060009182906118b7576118b7612488565b602002602001019060038111156118d0576118d061249e565b908160038111156118e3576118e361249e565b815250506002816000015160018151811061190057611900612488565b602002602001019060038111156119195761191961249e565b9081600381111561192c5761192c61249e565b8152505061198830306001600160a01b0316633f555c728660405160240161195691815260200190565b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611b8a565b816020015160008151811061199f5761199f612488565b60200260200101819052506119bf60408051602081019091526000815290565b81602001516001815181106119d6576119d6612488565b6020026020010181905250611a373063499ff5d160e01b604051602001611a0d91906001600160e01b031991909116815260200190565b6040516020818303038152906040528373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee611bb6565b60405190925083907f1e28175955a872c8252a6e5cf36ac6b318d074eb78b49731e5cb9ddc2d870b6390600090a250919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405163ee8ca3b560e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ee8ca3b590602401600060405180830381600087803b158015611b1d57600080fd5b505af1158015611b31573d6000803e3d6000fd5b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a72908490611c59565b60608282604051602001611b9f9291906124b4565b604051602081830303815290604052905092915050565b604051633323b46760e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633323b46790611c0b90889088908890889060040161252d565b6020604051808303816000875af1158015611c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4e919061246f565b90505b949350505050565b6000611cae826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d2b9092919063ffffffff16565b805190915015610a725780806020019051810190611ccc9190612328565b610a725760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610849565b6060611c51848460008585600080866001600160a01b03168587604051611d5291906121ae565b60006040518083038185875af1925050503d8060008114611d8f576040519150601f19603f3d011682016040523d82523d6000602084013e611d94565b606091505b5091509150611da587838387611db0565b979650505050505050565b60608315611e1f578251600003611e18576001600160a01b0385163b611e185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610849565b5081611c51565b611c518383815115611e345781518083602001fd5b8060405162461bcd60e51b815260040161084991906125e6565b60008060408385031215611e6157600080fd5b50508035926020909101359150565b6001600160a01b03811681146111bc57600080fd5b600060208284031215611e9757600080fd5b813561123381611e70565b60008060408385031215611eb557600080fd5b8235611ec081611e70565b946020939093013593505050565b600080600060408486031215611ee357600080fd5b83359250602084013567ffffffffffffffff80821115611f0257600080fd5b818601915086601f830112611f1657600080fd5b813581811115611f2557600080fd5b876020828501011115611f3757600080fd5b6020830194508093505050509250925092565b600060208284031215611f5c57600080fd5b5035919050565b60005b83811015611f7e578181015183820152602001611f66565b50506000910152565b60008151808452611f9f816020860160208601611f63565b601f01601f19169290920160200192915050565b8215158152604060208201526000611c516040830184611f87565b803560ff81168114611fdf57600080fd5b919050565b600080600060608486031215611ff957600080fd5b61200284611fce565b925061201060208501611fce565b915061201e60408501611fce565b90509250925092565b8215158152604060208201526120496040820183516001600160a01b03169052565b6000602083015161205f606084018260ff169052565b50604083015160ff8116608084015250606083015160ff811660a084015250608083015160ff811660c08401525060a083015160e083015260c0830151610100818185015260e085015191506101206120bb8186018415159052565b908501519150610140906120d28583018415159052565b85015161016085019190915290506120ee610180840182611f87565b95945050505050565b60008060006060848603121561210c57600080fd5b833561211781611e70565b925060208401359150604084013561212e81611e70565b809150509250925092565b600061014060018060a01b038d16835260ff8c16602084015260ff8b16604084015260ff8a16606084015260ff891660808401528760a08401528660c084015285151560e08401528415156101008401528061012084015261219d81840185611f87565b9d9c50505050505050505050505050565b600082516121c0818460208701611f63565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806121f457607f821691505b60208210810361221457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a7257600081815260208120601f850160051c810160208610156122415750805b601f850160051c820191505b818110156122605782815560010161224d565b505050505050565b815167ffffffffffffffff811115612282576122826121ca565b6122968161229084546121e0565b8461221a565b602080601f8311600181146122cb57600084156122b35750858301515b600019600386901b1c1916600185901b178555612260565b600085815260208120601f198616915b828110156122fa578886015182559484019460019091019084016122db565b50858210156123185787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561233a57600080fd5b8151801515811461123357600080fd5b60008261236757634e487b7160e01b600052601260045260246000fd5b500690565b60006020828403121561237e57600080fd5b815167ffffffffffffffff8082111561239657600080fd5b818401915084601f8301126123aa57600080fd5b8151818111156123bc576123bc6121ca565b604051601f8201601f19908116603f011681019083821181831017156123e4576123e46121ca565b816040528281528760208487010111156123fd57600080fd5b611da5836020830160208801611f63565b60ff818116838216029081169081811461243857634e487b7160e01b600052601160045260246000fd5b5092915050565b6000806040838503121561245257600080fd5b82519150602083015161246481611e70565b809150509250929050565b60006020828403121561248157600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0383168152604060208201819052600090611c5190830184611f87565b600081518084526020808501808196508360051b8101915082860160005b8581101561252057828403895261250e848351611f87565b988501989350908401906001016124f6565b5091979650505050505050565b6001600160a01b03851681526080602080830182905260009161255290840187611f87565b838103604080860191909152865181835280519183018290528301906000906060840190825b818110156125b1578451600480821061259e57634e487b7160e01b865260218152602486fd5b5083529386019391860191600101612578565b5050848901519250838103858501526125ca81846124d8565b955050505050506120ee60608301846001600160a01b03169052565b6020815260006112336020830184611f8756fea2646970667358221220ba1145c4e14559064c91961626d4140c32605acbfa393b21a6e291635689d1a064736f6c63430008130033";

type BettingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BettingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Betting__factory extends ContractFactory {
  constructor(...args: BettingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _betFee: PromiseOrValue<BigNumberish>,
    _qrngFee: PromiseOrValue<BigNumberish>,
    _airnodeRrp: PromiseOrValue<string>,
    _automate: PromiseOrValue<string>,
    _flyFlutterCoinContract: PromiseOrValue<string>,
    _fundsOwner: PromiseOrValue<string>,
    _houseContract: PromiseOrValue<string>,
    _oddsAndEvenContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Betting> {
    return super.deploy(
      _betFee,
      _qrngFee,
      _airnodeRrp,
      _automate,
      _flyFlutterCoinContract,
      _fundsOwner,
      _houseContract,
      _oddsAndEvenContract,
      overrides || {}
    ) as Promise<Betting>;
  }
  override getDeployTransaction(
    _betFee: PromiseOrValue<BigNumberish>,
    _qrngFee: PromiseOrValue<BigNumberish>,
    _airnodeRrp: PromiseOrValue<string>,
    _automate: PromiseOrValue<string>,
    _flyFlutterCoinContract: PromiseOrValue<string>,
    _fundsOwner: PromiseOrValue<string>,
    _houseContract: PromiseOrValue<string>,
    _oddsAndEvenContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _betFee,
      _qrngFee,
      _airnodeRrp,
      _automate,
      _flyFlutterCoinContract,
      _fundsOwner,
      _houseContract,
      _oddsAndEvenContract,
      overrides || {}
    );
  }
  override attach(address: string): Betting {
    return super.attach(address) as Betting;
  }
  override connect(signer: Signer): Betting__factory {
    return super.connect(signer) as Betting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BettingInterface {
    return new utils.Interface(_abi) as BettingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Betting {
    return new Contract(address, _abi, signerOrProvider) as Betting;
  }
}
